import React, { useEffect, useState } from 'react'; 

  

const Table = () => { 

  const [listPhotos, setPhotos] = useState([]); 

  const [currentPage, setCurrentPage] = useState(1); 

  const perPage = 10; 

  const [totalPages, setTotalPages] = useState(1); 

  const maxPagesToShow = 5; 

  

  useEffect(() => { 

    const fetchData = async () => { 

      try { 

        const startState = (currentPage - 1) * perPage; 

        const limit = perPage; 

        const response = await fetch(`https://jsonplaceholder.typicode.com/photos?_start=${startState}&_limit=${limit}`); 

        const data = await response.json(); 

        setPhotos(data); 

      } catch (error) { 

        console.error('Error fetching data:', error); 

      } 

    }; 

  

    fetchData(); 

  }, [currentPage, perPage]); 

  

  useEffect(() => { 

    const fetchTotalPages = async () => { 

      try { 

        const response = await fetch('https://jsonplaceholder.typicode.com/photos'); 

        const data = await response.json(); 

        const totalPages = Math.ceil(data.length / perPage); 

        setTotalPages(totalPages); 

      } catch (error) { 

        console.error('Error fetching total pages:', error); 

      } 

    }; 

  

    fetchTotalPages(); 

  }, [perPage]); 

  

  const handlePageClick = (page) => { 

    setCurrentPage(page); 

  }; 

  

  const handlePrevClick = () => { 

    setCurrentPage((prevPage) => Math.max(prevPage - 1, 1)); 

  }; 

  

  const handleNextClick = () => { 

    setCurrentPage((prevPage) => Math.min(prevPage + 1, totalPages)); 

  }; 

  

  const getPageNumbers = () => { 

    const currentPageIndex = currentPage - 1; 

    const halfMaxPagesToShow = Math.floor(maxPagesToShow / 2); 

    const startPage = Math.max(1, currentPageIndex - halfMaxPagesToShow); 

    const endPage = Math.min(totalPages, startPage + maxPagesToShow - 1); 

    return [...Array(endPage - startPage + 1).keys()].map((index) => startPage + index); 

  }; 

  

  return ( 

    <div className='col-sm-8 offset-sm-2 mt-5'> 

      <div className='bd-example'> 

        <table className='table table-bordered'> 

          <thead> 

            <tr> 

              <th scope='col'>#</th> 

              <th scope='col'>Album Id</th> 

              <th scope='col'>Title</th> 

              <th scope='col'>Image</th> 

              <th scope='col'>Thumbnail</th> 

            </tr> 

          </thead> 

          <tbody> 

            {listPhotos.map((photo, index) => ( 

              <tr key={photo.id}> 

                <th scope='row' className='align-middle text-center'> 

                  {index + 1} 

                </th> 

                <td align='center' className='align-middle text-center'> 

                  {photo.albumId} 

                </td> 

                <td className='align-middle text-center'>{photo.title}</td> 

                <td className='align-middle text-center'> 

                  <img src={photo.url} alt='image' style={{ height: '100px' }} /> 

                </td> 

                <td className='align-middle text-center'> 

                  <img src={photo.thumbnailUrl} alt='thumbnail' style={{ height: '100px' }} /> 

                </td> 

              </tr> 

            ))} 

          </tbody> 

        </table> 

        <div className='pagination'> 

          <button onClick={handlePrevClick} disabled={currentPage === 1}>Previous</button> 

          {getPageNumbers().map((page) => ( 

            <button key={page} onClick={() => handlePageClick(page)} className={currentPage === page ? 'active' : ''}> 

              {page} 

            </button> 

          ))} 

          <button onClick={handleNextClick} disabled={currentPage === totalPages}>Next</button> 

        </div> 

      </div> 

    </div> 

  ); 

}; 

  

export default Table; 

 
